* Unit tests
* Autodetect dtype
* Handle missing values.  Currently a missing field is replaced with a value that depends on the
  data type: float -> nan, int -> 0, string -> '', datetime -> 0.
* Handle and report parsing errors (e.g. "Invalid floating point value '12..34' in field 3 on line 99").
  Include a check that the number of fields read from the file matches the expected number of fields.
* Add an 'enum' replacement.  This will be a relatively simple replacement scheme, in which a
  dictionary mapping strings to strings is provided.  This can be implemented in C, so it
  should be reasonably fast.
* Add callback converters.  This will allow the user to provide their own python function
  to do conversion.
* Complex numbers are supported, but the set of valid strings that can be converted to
  complex numbers needs to be defined, and the implementation fixed to properly parse that set.
